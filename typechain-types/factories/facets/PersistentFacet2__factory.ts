/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PersistentFacet2,
  PersistentFacet2Interface,
} from "../../facets/PersistentFacet2";

const _abi = [
  {
    inputs: [],
    name: "getDS",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l1",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "msg_",
        type: "string",
      },
    ],
    name: "s1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "msg_",
        type: "string",
      },
    ],
    name: "s2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "msg_",
        type: "string",
      },
    ],
    name: "setDS",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506108af806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806305f822b2146100675780632b81d6e0146100835780637380874f146100a15780639b2e93d8146100bd578063a32e0f3f146100db578063f0d00991146100f9575b600080fd5b610081600480360381019061007c91906104a7565b610115565b005b61008b610131565b604051610098919061056f565b60405180910390f35b6100bb60048036038101906100b691906104a7565b6101c6565b005b6100c56101dc565b6040516100d2919061056f565b60405180910390f35b6100e3610270565b6040516100f0919061056f565b60405180910390f35b610113600480360381019061010e91906104a7565b61030b565b005b8061011e610320565b600001908161012d91906107a7565b5050565b606060006001018054610143906105c0565b80601f016020809104026020016040519081016040528092919081815260200182805461016f906105c0565b80156101bc5780601f10610191576101008083540402835291602001916101bc565b820191906000526020600020905b81548152906001019060200180831161019f57829003601f168201915b5050505050905090565b80600060010190816101d891906107a7565b5050565b60606000800180546101ed906105c0565b80601f0160208091040260200160405190810160405280929190818152602001828054610219906105c0565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b5050505050905090565b606061027a610320565b6000018054610288906105c0565b80601f01602080910402602001604051908101604052809291908181526020018280546102b4906105c0565b80156103015780601f106102d657610100808354040283529160200191610301565b820191906000526020600020905b8154815290600101906020018083116102e457829003601f168201915b5050505050905090565b8060008001908161031c91906107a7565b5050565b6000807f73bdb2cfb4eb24b013f86791fd18cbb1ab03b7cd4b4ae79aa3b35148d039845090508091505090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6103b48261036b565b810181811067ffffffffffffffff821117156103d3576103d261037c565b5b80604052505050565b60006103e661034d565b90506103f282826103ab565b919050565b600067ffffffffffffffff8211156104125761041161037c565b5b61041b8261036b565b9050602081019050919050565b82818337600083830152505050565b600061044a610445846103f7565b6103dc565b90508281526020810184848401111561046657610465610366565b5b610471848285610428565b509392505050565b600082601f83011261048e5761048d610361565b5b813561049e848260208601610437565b91505092915050565b6000602082840312156104bd576104bc610357565b5b600082013567ffffffffffffffff8111156104db576104da61035c565b5b6104e784828501610479565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561052a57808201518184015260208101905061050f565b60008484015250505050565b6000610541826104f0565b61054b81856104fb565b935061055b81856020860161050c565b6105648161036b565b840191505092915050565b600060208201905081810360008301526105898184610536565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105d857607f821691505b6020821081036105eb576105ea610591565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026106537fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610616565b61065d8683610616565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006106a461069f61069a84610675565b61067f565b610675565b9050919050565b6000819050919050565b6106be83610689565b6106d26106ca826106ab565b848454610623565b825550505050565b600090565b6106e76106da565b6106f28184846106b5565b505050565b5b818110156107165761070b6000826106df565b6001810190506106f8565b5050565b601f82111561075b5761072c816105f1565b61073584610606565b81016020851015610744578190505b61075861075085610606565b8301826106f7565b50505b505050565b600082821c905092915050565b600061077e60001984600802610760565b1980831691505092915050565b6000610797838361076d565b9150826002028217905092915050565b6107b0826104f0565b67ffffffffffffffff8111156107c9576107c861037c565b5b6107d382546105c0565b6107de82828561071a565b600060209050601f83116001811461081157600084156107ff578287015190505b610809858261078b565b865550610871565b601f19841661081f866105f1565b60005b8281101561084757848901518255600182019150602085019450602081019050610822565b868310156108645784890151610860601f89168261076d565b8355505b6001600288020188555050505b50505050505056fea264697066735822122065ee8a8d8bbeb3ca39fd65f8966f0304c4b39760d749706731a4f3e6d560755e64736f6c63430008100033";

type PersistentFacet2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PersistentFacet2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PersistentFacet2__factory extends ContractFactory {
  constructor(...args: PersistentFacet2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PersistentFacet2> {
    return super.deploy(overrides || {}) as Promise<PersistentFacet2>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PersistentFacet2 {
    return super.attach(address) as PersistentFacet2;
  }
  override connect(signer: Signer): PersistentFacet2__factory {
    return super.connect(signer) as PersistentFacet2__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PersistentFacet2Interface {
    return new utils.Interface(_abi) as PersistentFacet2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PersistentFacet2 {
    return new Contract(address, _abi, signerOrProvider) as PersistentFacet2;
  }
}
