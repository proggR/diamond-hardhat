/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ERC1155, ERC1155Interface } from "../../facets/ERC1155";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts_",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids_",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
      {
        internalType: "string",
        name: "ipfsHash_",
        type: "string",
      },
    ],
    name: "construct",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids_",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts_",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved_",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id_",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID_",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061264b806100206000396000f3fe608060405234801561001057600080fd5b506004361061009d5760003560e01c80634f558e79116100665780634f558e791461017e578063a22cb465146101ae578063bd85b039146101ca578063e985e9c5146101fa578063f242432a1461022a5761009d565b8062fdd58e146100a25780630e89341c146100d25780632acfb9d7146101025780632eb2c2d6146101325780634e1273f41461014e575b600080fd5b6100bc60048036038101906100b79190611479565b610246565b6040516100c991906114c8565b60405180910390f35b6100ec60048036038101906100e791906114e3565b6102b3565b6040516100f991906115a0565b60405180910390f35b61011c600480360381019061011791906116f7565b610458565b604051610129919061178a565b60405180910390f35b61014c6004803603810190610147919061185b565b610489565b005b6101686004803603810190610163919061198d565b61056f565b6040516101759190611acc565b60405180910390f35b610198600480360381019061019391906114e3565b61069e565b6040516101a5919061178a565b60405180910390f35b6101c860048036038101906101c39190611b1a565b6106b2565b005b6101e460048036038101906101df91906114e3565b6106c1565b6040516101f191906114c8565b60405180910390f35b610214600480360381019061020f9190611b5a565b6106e7565b604051610221919061178a565b60405180910390f35b610244600480360381019061023f9190611b9a565b610784565b005b6000610251836107e6565b610259610858565b600001600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b606060006102bf610858565b600501600084815260200190815260200160002080546102de90611c63565b80601f016020809104026020016040519081016040528092919081815260200182805461030a90611c63565b80156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b505050505090506000610368610858565b600401805461037690611c63565b80601f01602080910402602001604051908101604052809291908181526020018280546103a290611c63565b80156103ef5780601f106103c4576101008083540402835291602001916103ef565b820191906000526020600020905b8154815290600101906020018083116103d257829003601f168201915b505050505090506000815103610409578192505050610453565b60008251111561043e578082604051602001610426929190611cd0565b60405160208183030381529060405292505050610453565b60405180602001604052806000815250925050505b919050565b600082610463610858565b60040190816104729190611ea0565b5061047f33836001610885565b6001905092915050565b610492886108a5565b6105658888888880806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050878780806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505086868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610927565b5050505050505050565b60608282905085859050146105b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105b090611fe4565b60405180910390fd5b60008585905067ffffffffffffffff8111156105d8576105d76115cc565b5b6040519080825280602002602001820160405280156106065781602001602082028036833780820191505090505b50905060005b868690508110156106915761066187878381811061062d5761062c612004565b5b90506020020160208101906106429190612033565b86868481811061065557610654612004565b5b90506020020135610246565b82828151811061067457610673612004565b5b6020026020010181815250508061068a9061208f565b905061060c565b5080915050949350505050565b6000806106aa836106c1565b119050919050565b6106bd338383610aaa565b5050565b60006106cb610858565b6002016000838152602001908152602001600020549050919050565b60006106f1610858565b60010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b61078d866108a5565b6107de8686868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c1f565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610855576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084c90612149565b60405180910390fd5b50565b6000807fd3fe628193ee569619c435f3ca060f3d233f5ab158f623ade15b883becbdd28990508091505090565b6108a083838360405180602001604052806000815250610cbd565b505050565b3373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806108e557506108e481336106e7565b5b610924576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091b906121db565b60405180910390fd5b50565b825182511461096b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096290611fe4565b60405180910390fd5b6000825167ffffffffffffffff811115610988576109876115cc565b5b6040519080825280602002602001820160405280156109b65781602001602082028036833780820191505090505b50905060005b8351811015610a1657610a0587878784815181106109dd576109dc612004565b5b60200260200101518785815181106109f8576109f7612004565b5b6020026020010151610e93565b80610a0f9061208f565b90506109bc565b508473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610a8d9291906121fb565b60405180910390a4610aa28686868686610f8d565b505050505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0f906122a4565b60405180910390fd5b80610b21610858565b60010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610c12919061178a565b60405180910390a3505050565b610c2b85858585610e93565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628686604051610ca19291906122c4565b60405180910390a4610cb68585858585610fe0565b5050505050565b610cc6846107e6565b6000610cd0610858565b905060008160030185604051610ce691906122ed565b908152602001604051809103902054905060008103610d6957816006016000815480929190610d149061208f565b919050555081600601549050848260050160008381526020019081526020016000209081610d429190611ea0565b50808260030186604051610d5691906122ed565b9081526020016040518091039020819055505b838260020160008381526020019081526020016000206000828254610d8e9190612304565b925050819055508382600001600083815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610df79190612304565b925050819055508573ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628488604051610e759291906122c4565b60405180910390a4610e8b600087838787610fe0565b505050505050565b610e9c836107e6565b610ea7848383611033565b80610eb0610858565b600001600084815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f109190612338565b9250508190555080610f20610858565b600001600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f809190612304565b9250508190555050505050565b610f9a85858585856110d4565b610fd9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fd0906123de565b60405180910390fd5b5050505050565b610fed8585858585611241565b61102c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611023906123de565b60405180910390fd5b5050505050565b8061103c610858565b600001600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156110cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110c69061244a565b60405180910390fd5b505050565b60006110df856113ae565b15611233578473ffffffffffffffffffffffffffffffffffffffff1663bc197c8133888787876040518663ffffffff1660e01b81526004016111259594939291906124ce565b6020604051808303816000875af192505050801561116157506040513d601f19601f8201168201806040525081019061115e919061258e565b60015b6111e3573d8060008114611191576040519150601f19603f3d011682016040523d82523d6000602084013e611196565b606091505b5060008151036111db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d2906123de565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611238565b600190505b95945050505050565b600061124c856113ae565b156113a0578473ffffffffffffffffffffffffffffffffffffffff1663f23a6e6133888787876040518663ffffffff1660e01b81526004016112929594939291906125bb565b6020604051808303816000875af19250505080156112ce57506040513d601f19601f820116820180604052508101906112cb919061258e565b60015b611350573d80600081146112fe576040519150601f19603f3d011682016040523d82523d6000602084013e611303565b606091505b506000815103611348576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133f906123de565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150506113a5565b600190505b95945050505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611410826113e5565b9050919050565b61142081611405565b811461142b57600080fd5b50565b60008135905061143d81611417565b92915050565b6000819050919050565b61145681611443565b811461146157600080fd5b50565b6000813590506114738161144d565b92915050565b600080604083850312156114905761148f6113db565b5b600061149e8582860161142e565b92505060206114af85828601611464565b9150509250929050565b6114c281611443565b82525050565b60006020820190506114dd60008301846114b9565b92915050565b6000602082840312156114f9576114f86113db565b5b600061150784828501611464565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561154a57808201518184015260208101905061152f565b60008484015250505050565b6000601f19601f8301169050919050565b600061157282611510565b61157c818561151b565b935061158c81856020860161152c565b61159581611556565b840191505092915050565b600060208201905081810360008301526115ba8184611567565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61160482611556565b810181811067ffffffffffffffff82111715611623576116226115cc565b5b80604052505050565b60006116366113d1565b905061164282826115fb565b919050565b600067ffffffffffffffff821115611662576116616115cc565b5b61166b82611556565b9050602081019050919050565b82818337600083830152505050565b600061169a61169584611647565b61162c565b9050828152602081018484840111156116b6576116b56115c7565b5b6116c1848285611678565b509392505050565b600082601f8301126116de576116dd6115c2565b5b81356116ee848260208601611687565b91505092915050565b6000806040838503121561170e5761170d6113db565b5b600083013567ffffffffffffffff81111561172c5761172b6113e0565b5b611738858286016116c9565b925050602083013567ffffffffffffffff811115611759576117586113e0565b5b611765858286016116c9565b9150509250929050565b60008115159050919050565b6117848161176f565b82525050565b600060208201905061179f600083018461177b565b92915050565b600080fd5b600080fd5b60008083601f8401126117c5576117c46115c2565b5b8235905067ffffffffffffffff8111156117e2576117e16117a5565b5b6020830191508360208202830111156117fe576117fd6117aa565b5b9250929050565b60008083601f84011261181b5761181a6115c2565b5b8235905067ffffffffffffffff811115611838576118376117a5565b5b602083019150836001820283011115611854576118536117aa565b5b9250929050565b60008060008060008060008060a0898b03121561187b5761187a6113db565b5b60006118898b828c0161142e565b985050602061189a8b828c0161142e565b975050604089013567ffffffffffffffff8111156118bb576118ba6113e0565b5b6118c78b828c016117af565b9650965050606089013567ffffffffffffffff8111156118ea576118e96113e0565b5b6118f68b828c016117af565b9450945050608089013567ffffffffffffffff811115611919576119186113e0565b5b6119258b828c01611805565b92509250509295985092959890939650565b60008083601f84011261194d5761194c6115c2565b5b8235905067ffffffffffffffff81111561196a576119696117a5565b5b602083019150836020820283011115611986576119856117aa565b5b9250929050565b600080600080604085870312156119a7576119a66113db565b5b600085013567ffffffffffffffff8111156119c5576119c46113e0565b5b6119d187828801611937565b9450945050602085013567ffffffffffffffff8111156119f4576119f36113e0565b5b611a00878288016117af565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611a4381611443565b82525050565b6000611a558383611a3a565b60208301905092915050565b6000602082019050919050565b6000611a7982611a0e565b611a838185611a19565b9350611a8e83611a2a565b8060005b83811015611abf578151611aa68882611a49565b9750611ab183611a61565b925050600181019050611a92565b5085935050505092915050565b60006020820190508181036000830152611ae68184611a6e565b905092915050565b611af78161176f565b8114611b0257600080fd5b50565b600081359050611b1481611aee565b92915050565b60008060408385031215611b3157611b306113db565b5b6000611b3f8582860161142e565b9250506020611b5085828601611b05565b9150509250929050565b60008060408385031215611b7157611b706113db565b5b6000611b7f8582860161142e565b9250506020611b908582860161142e565b9150509250929050565b60008060008060008060a08789031215611bb757611bb66113db565b5b6000611bc589828a0161142e565b9650506020611bd689828a0161142e565b9550506040611be789828a01611464565b9450506060611bf889828a01611464565b935050608087013567ffffffffffffffff811115611c1957611c186113e0565b5b611c2589828a01611805565b92509250509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c7b57607f821691505b602082108103611c8e57611c8d611c34565b5b50919050565b600081905092915050565b6000611caa82611510565b611cb48185611c94565b9350611cc481856020860161152c565b80840191505092915050565b6000611cdc8285611c9f565b9150611ce88284611c9f565b91508190509392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611d567fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611d19565b611d608683611d19565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611d9d611d98611d9384611443565b611d78565b611443565b9050919050565b6000819050919050565b611db783611d82565b611dcb611dc382611da4565b848454611d26565b825550505050565b600090565b611de0611dd3565b611deb818484611dae565b505050565b5b81811015611e0f57611e04600082611dd8565b600181019050611df1565b5050565b601f821115611e5457611e2581611cf4565b611e2e84611d09565b81016020851015611e3d578190505b611e51611e4985611d09565b830182611df0565b50505b505050565b600082821c905092915050565b6000611e7760001984600802611e59565b1980831691505092915050565b6000611e908383611e66565b9150826002028217905092915050565b611ea982611510565b67ffffffffffffffff811115611ec257611ec16115cc565b5b611ecc8254611c63565b611ed7828285611e13565b600060209050601f831160018114611f0a5760008415611ef8578287015190505b611f028582611e84565b865550611f6a565b601f198416611f1886611cf4565b60005b82811015611f4057848901518255600182019150602085019450602081019050611f1b565b86831015611f5d5784890151611f59601f891682611e66565b8355505b6001600288020188555050505b505050505050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611fce60298361151b565b9150611fd982611f72565b604082019050919050565b60006020820190508181036000830152611ffd81611fc1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060208284031215612049576120486113db565b5b60006120578482850161142e565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061209a82611443565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120cc576120cb612060565b5b600182019050919050565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b6000612133602a8361151b565b915061213e826120d7565b604082019050919050565b6000602082019050818103600083015261216281612126565b9050919050565b7f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60008201527f6572206f7220617070726f766564000000000000000000000000000000000000602082015250565b60006121c5602e8361151b565b91506121d082612169565b604082019050919050565b600060208201905081810360008301526121f4816121b8565b9050919050565b600060408201905081810360008301526122158185611a6e565b905081810360208301526122298184611a6e565b90509392505050565b7f455243313135353a2043616e6e6f742073657420617070726f76616c2073746160008201527f74757320666f722073656c660000000000000000000000000000000000000000602082015250565b600061228e602c8361151b565b915061229982612232565b604082019050919050565b600060208201905081810360008301526122bd81612281565b9050919050565b60006040820190506122d960008301856114b9565b6122e660208301846114b9565b9392505050565b60006122f98284611c9f565b915081905092915050565b600061230f82611443565b915061231a83611443565b925082820190508082111561233257612331612060565b5b92915050565b600061234382611443565b915061234e83611443565b925082820390508181111561236657612365612060565b5b92915050565b7f455243313135353a207472616e7366657220746f206e6f6e204552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b60006123c860348361151b565b91506123d38261236c565b604082019050919050565b600060208201905081810360008301526123f7816123bb565b9050919050565b7f455243313135353a20496e73756666696369656e742062616c616e6365000000600082015250565b6000612434601d8361151b565b915061243f826123fe565b602082019050919050565b6000602082019050818103600083015261246381612427565b9050919050565b61247381611405565b82525050565b600081519050919050565b600082825260208201905092915050565b60006124a082612479565b6124aa8185612484565b93506124ba81856020860161152c565b6124c381611556565b840191505092915050565b600060a0820190506124e3600083018861246a565b6124f0602083018761246a565b81810360408301526125028186611a6e565b905081810360608301526125168185611a6e565b9050818103608083015261252a8184612495565b90509695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61256b81612536565b811461257657600080fd5b50565b60008151905061258881612562565b92915050565b6000602082840312156125a4576125a36113db565b5b60006125b284828501612579565b91505092915050565b600060a0820190506125d0600083018861246a565b6125dd602083018761246a565b6125ea60408301866114b9565b6125f760608301856114b9565b81810360808301526126098184612495565b9050969550505050505056fea2646970667358221220b960b99a642c8775c379fecd3278d7af46282fb997ad877e68da6f9d85fd867b64736f6c63430008100033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
