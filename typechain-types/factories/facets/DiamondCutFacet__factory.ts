/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  DiamondCutFacet,
  DiamondCutFacetInterface,
} from "../../facets/DiamondCutFacet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initializationContractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "InitializationFunctionReverted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        indexed: false,
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "DiamondCut",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "_diamondCut",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "_init",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_calldata",
        type: "bytes",
      },
    ],
    name: "diamondCut",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50612494806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80631f931c1c14610030575b600080fd5b61004a600480360381019061004591906115bb565b61004c565b005b6100546100b6565b6100af8585906100649190611959565b8484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610151565b5050505050565b6100be610380565b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461014f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610146906119f1565b60405180910390fd5b565b60005b835181101561033557600084828151811061017257610171611a11565b5b60200260200101516020015190506000600281111561019457610193611a40565b5b8160028111156101a7576101a6611a40565b5b036101f7576101f28583815181106101c2576101c1611a11565b5b6020026020010151600001518684815181106101e1576101e0611a11565b5b6020026020010151604001516103ad565b610321565b6001600281111561020b5761020a611a40565b5b81600281111561021e5761021d611a40565b5b0361026e5761026985838151811061023957610238611a11565b5b60200260200101516000015186848151811061025857610257611a11565b5b602002602001015160400151610624565b610320565b60028081111561028157610280611a40565b5b81600281111561029457610293611a40565b5b036102e4576102df8583815181106102af576102ae611a11565b5b6020026020010151600001518684815181106102ce576102cd611a11565b5b6020026020010151604001516108a5565b61031f565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031690611ae1565b60405180910390fd5b5b5b50808061032d90611b3a565b915050610154565b507f8faa70878671ccd212d20771b795c50af8fd3ff6cf27f4bde57e5d4de0aeb67383838360405161036993929190611e37565b60405180910390a161037b8282610a30565b505050565b6000807fc8fcad8db84d3cc18b4c41d551ea0ee66dd599cde068d998e57d5e09332c131c90508091505090565b60008151116103f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e890611eee565b60405180910390fd5b60006103fb610380565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361046c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046390611f80565b60405180910390fd5b60008160010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054905090506000816bffffffffffffffffffffffff16036104d9576104d88285610b52565b5b60005b835181101561061d5760008482815181106104fa576104f9611a11565b5b602002602001015190506000846000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e590612012565b60405180910390fd5b6105fa8583868a610c2d565b83806106059061204a565b9450505050808061061590611b3a565b9150506104dc565b5050505050565b6000815111610668576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065f90611eee565b60405180910390fd5b6000610672610380565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036106e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106da90611f80565b60405180910390fd5b60008160010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054905090506000816bffffffffffffffffffffffff16036107505761074f8285610b52565b5b60005b835181101561089e57600084828151811061077157610770611a11565b5b602002602001015190506000846000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610864576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085b906120f0565b60405180910390fd5b61086f858284610dda565b61087b8583868a610c2d565b83806108869061204a565b9450505050808061089690611b3a565b915050610753565b5050505050565b60008151116108e9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e090611eee565b60405180910390fd5b60006108f3610380565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095b90612182565b60405180910390fd5b60005b8251811015610a2a57600083828151811061098557610984611a11565b5b602002602001015190506000836000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050610a15848284610dda565b50508080610a2290611b3a565b915050610967565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160315610b4e57610a87826040518060600160405280602881526020016124136028913961143c565b6000808373ffffffffffffffffffffffffffffffffffffffff1683604051610aaf91906121de565b600060405180830381855af49150503d8060008114610aea576040519150601f19603f3d011682016040523d82523d6000602084013e610aef565b606091505b509150915081610b4b57600081511115610b0c5780518082602001fd5b83836040517f192105d7000000000000000000000000000000000000000000000000000000008152600401610b429291906121f5565b60405180910390fd5b50505b5050565b610b748160405180606001604052806024815260200161243b6024913961143c565b81600201805490508260010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555081600201819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b81846000016000857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055508360010160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018390806001815401808255809150506001900390600052602060002090600891828204019190066004029091909190916101000a81548163ffffffff021916908360e01c021790555080846000016000857bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e49576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4090612297565b60405180910390fd5b3073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eae90612329565b60405180910390fd5b6000836000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff169050600060018560010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180549050610f8e9190612349565b90508082146111225760008560010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018281548110610fef57610fee611a11565b5b90600052602060002090600891828204019190066004029054906101000a900460e01b9050808660010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001848154811061106b5761106a611a11565b5b90600052602060002090600891828204019190066004026101000a81548163ffffffff021916908360e01c021790555082866000016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff160217905550505b8460010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054806111765761117561237d565b5b60019003818190600052602060002090600891828204019190066004026101000a81549063ffffffff02191690559055846000016000847bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a8154906bffffffffffffffffffffffff0219169055505060008103611435576000600186600201805490506112609190612349565b905060008660010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001015490508181146113a15760008760020183815481106112ca576112c9611a11565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508088600201838154811061130e5761130d611a11565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818860010160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550505b866002018054806113b5576113b461237d565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590558660010160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001016000905550505b5050505050565b6000823b9050600081118290611488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161147f91906123f0565b60405180910390fd5b50505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b60008083601f8401126114c7576114c66114a2565b5b8235905067ffffffffffffffff8111156114e4576114e36114a7565b5b602083019150836020820283011115611500576114ff6114ac565b5b9250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061153282611507565b9050919050565b61154281611527565b811461154d57600080fd5b50565b60008135905061155f81611539565b92915050565b60008083601f84011261157b5761157a6114a2565b5b8235905067ffffffffffffffff811115611598576115976114a7565b5b6020830191508360018202830111156115b4576115b36114ac565b5b9250929050565b6000806000806000606086880312156115d7576115d6611498565b5b600086013567ffffffffffffffff8111156115f5576115f461149d565b5b611601888289016114b1565b9550955050602061161488828901611550565b935050604086013567ffffffffffffffff8111156116355761163461149d565b5b61164188828901611565565b92509250509295509295909350565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61169982611650565b810181811067ffffffffffffffff821117156116b8576116b7611661565b5b80604052505050565b60006116cb61148e565b90506116d78282611690565b919050565b600067ffffffffffffffff8211156116f7576116f6611661565b5b602082029050602081019050919050565b600080fd5b600080fd5b6003811061171f57600080fd5b50565b60008135905061173181611712565b92915050565b600067ffffffffffffffff82111561175257611751611661565b5b602082029050602081019050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61179881611763565b81146117a357600080fd5b50565b6000813590506117b58161178f565b92915050565b60006117ce6117c984611737565b6116c1565b905080838252602082019050602084028301858111156117f1576117f06114ac565b5b835b8181101561181a578061180688826117a6565b8452602084019350506020810190506117f3565b5050509392505050565b600082601f830112611839576118386114a2565b5b81356118498482602086016117bb565b91505092915050565b60006060828403121561186857611867611708565b5b61187260606116c1565b9050600061188284828501611550565b600083015250602061189684828501611722565b602083015250604082013567ffffffffffffffff8111156118ba576118b961170d565b5b6118c684828501611824565b60408301525092915050565b60006118e56118e0846116dc565b6116c1565b90508083825260208201905060208402830185811115611908576119076114ac565b5b835b8181101561194f57803567ffffffffffffffff81111561192d5761192c6114a2565b5b80860161193a8982611852565b8552602085019450505060208101905061190a565b5050509392505050565b60006119663684846118d2565b905092915050565b600082825260208201905092915050565b7f4c69624469616d6f6e643a204d75737420626520636f6e7472616374206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006119db60228361196e565b91506119e68261197f565b604082019050919050565b60006020820190508181036000830152611a0a816119ce565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4c69624469616d6f6e644375743a20496e636f7272656374204661636574437560008201527f74416374696f6e00000000000000000000000000000000000000000000000000602082015250565b6000611acb60278361196e565b9150611ad682611a6f565b604082019050919050565b60006020820190508181036000830152611afa81611abe565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b6000611b4582611b30565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611b7757611b76611b01565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611bb781611527565b82525050565b60038110611bce57611bcd611a40565b5b50565b6000819050611bdf82611bbd565b919050565b6000611bef82611bd1565b9050919050565b611bff81611be4565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611c3a81611763565b82525050565b6000611c4c8383611c31565b60208301905092915050565b6000602082019050919050565b6000611c7082611c05565b611c7a8185611c10565b9350611c8583611c21565b8060005b83811015611cb6578151611c9d8882611c40565b9750611ca883611c58565b925050600181019050611c89565b5085935050505092915050565b6000606083016000830151611cdb6000860182611bae565b506020830151611cee6020860182611bf6565b5060408301518482036040860152611d068282611c65565b9150508091505092915050565b6000611d1f8383611cc3565b905092915050565b6000602082019050919050565b6000611d3f82611b82565b611d498185611b8d565b935083602082028501611d5b85611b9e565b8060005b85811015611d975784840389528151611d788582611d13565b9450611d8383611d27565b925060208a01995050600181019050611d5f565b50829750879550505050505092915050565b611db281611527565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611df2578082015181840152602081019050611dd7565b60008484015250505050565b6000611e0982611db8565b611e138185611dc3565b9350611e23818560208601611dd4565b611e2c81611650565b840191505092915050565b60006060820190508181036000830152611e518186611d34565b9050611e606020830185611da9565b8181036040830152611e728184611dfe565b9050949350505050565b7f4c69624469616d6f6e644375743a204e6f2073656c6563746f727320696e206660008201527f6163657420746f20637574000000000000000000000000000000000000000000602082015250565b6000611ed8602b8361196e565b9150611ee382611e7c565b604082019050919050565b60006020820190508181036000830152611f0781611ecb565b9050919050565b7f4c69624469616d6f6e644375743a204164642066616365742063616e2774206260008201527f6520616464726573732830290000000000000000000000000000000000000000602082015250565b6000611f6a602c8361196e565b9150611f7582611f0e565b604082019050919050565b60006020820190508181036000830152611f9981611f5d565b9050919050565b7f4c69624469616d6f6e644375743a2043616e2774206164642066756e6374696f60008201527f6e207468617420616c7265616479206578697374730000000000000000000000602082015250565b6000611ffc60358361196e565b915061200782611fa0565b604082019050919050565b6000602082019050818103600083015261202b81611fef565b9050919050565b60006bffffffffffffffffffffffff82169050919050565b600061205582612032565b91506bffffffffffffffffffffffff820361207357612072611b01565b5b600182019050919050565b7f4c69624469616d6f6e644375743a2043616e2774207265706c6163652066756e60008201527f6374696f6e20776974682073616d652066756e6374696f6e0000000000000000602082015250565b60006120da60388361196e565b91506120e58261207e565b604082019050919050565b60006020820190508181036000830152612109816120cd565b9050919050565b7f4c69624469616d6f6e644375743a2052656d6f7665206661636574206164647260008201527f657373206d757374206265206164647265737328302900000000000000000000602082015250565b600061216c60368361196e565b915061217782612110565b604082019050919050565b6000602082019050818103600083015261219b8161215f565b9050919050565b600081905092915050565b60006121b882611db8565b6121c281856121a2565b93506121d2818560208601611dd4565b80840191505092915050565b60006121ea82846121ad565b915081905092915050565b600060408201905061220a6000830185611da9565b818103602083015261221c8184611dfe565b90509392505050565b7f4c69624469616d6f6e644375743a2043616e27742072656d6f76652066756e6360008201527f74696f6e207468617420646f65736e2774206578697374000000000000000000602082015250565b600061228160378361196e565b915061228c82612225565b604082019050919050565b600060208201905081810360008301526122b081612274565b9050919050565b7f4c69624469616d6f6e644375743a2043616e27742072656d6f766520696d6d7560008201527f7461626c652066756e6374696f6e000000000000000000000000000000000000602082015250565b6000612313602e8361196e565b915061231e826122b7565b604082019050919050565b6000602082019050818103600083015261234281612306565b9050919050565b600061235482611b30565b915061235f83611b30565b925082820390508181111561237757612376611b01565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600081519050919050565b60006123c2826123ac565b6123cc818561196e565b93506123dc818560208601611dd4565b6123e581611650565b840191505092915050565b6000602082019050818103600083015261240a81846123b7565b90509291505056fe4c69624469616d6f6e644375743a205f696e6974206164647265737320686173206e6f20636f64654c69624469616d6f6e644375743a204e657720666163657420686173206e6f20636f6465a26469706673582212206202b3da3a27488eda89e1e595c89543d1ce8d4fceef550334c872da1a29545364736f6c63430008100033";

type DiamondCutFacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondCutFacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondCutFacet__factory extends ContractFactory {
  constructor(...args: DiamondCutFacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondCutFacet> {
    return super.deploy(overrides || {}) as Promise<DiamondCutFacet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DiamondCutFacet {
    return super.attach(address) as DiamondCutFacet;
  }
  override connect(signer: Signer): DiamondCutFacet__factory {
    return super.connect(signer) as DiamondCutFacet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondCutFacetInterface {
    return new utils.Interface(_abi) as DiamondCutFacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondCutFacet {
    return new Contract(address, _abi, signerOrProvider) as DiamondCutFacet;
  }
}
