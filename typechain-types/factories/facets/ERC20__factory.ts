/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ERC20, ERC20Interface } from "../../facets/ERC20";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "total_",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "mintTo_",
        type: "address",
      },
    ],
    name: "construct",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506114fb806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c806370a082311161006657806370a082311461015d57806395d89b411461018d578063a9059cbb146101ab578063dd62ed3e146101db578063f12e24ba1461020b5761009e565b806306fdde03146100a3578063095ea7b3146100c157806318160ddd146100f157806323b872dd1461010f578063313ce5671461013f575b600080fd5b6100ab61023b565b6040516100b89190610a2b565b60405180910390f35b6100db60048036038101906100d69190610af5565b6102d6565b6040516100e89190610b50565b60405180910390f35b6100f96102eb565b6040516101069190610b7a565b60405180910390f35b61012960048036038101906101249190610b95565b6102fe565b6040516101369190610b50565b60405180910390f35b61014761031f565b6040516101549190610c04565b60405180910390f35b61017760048036038101906101729190610c1f565b61033f565b6040516101849190610b7a565b60405180910390f35b610195610391565b6040516101a29190610a2b565b60405180910390f35b6101c560048036038101906101c09190610af5565b61042c565b6040516101d29190610b50565b60405180910390f35b6101f560048036038101906101f09190610c4c565b610441565b6040516102029190610b7a565b60405180910390f35b61022560048036038101906102209190610ded565b6104d1565b6040516102329190610b50565b60405180910390f35b60606102456105a8565b600401805461025390610ecf565b80601f016020809104026020016040519081016040528092919081815260200182805461027f90610ecf565b80156102cc5780601f106102a1576101008083540402835291602001916102cc565b820191906000526020600020905b8154815290600101906020018083116102af57829003601f168201915b5050505050905090565b60006102e33384846105d5565b905092915050565b60006102f56105a8565b60030154905090565b600061030b8484846106db565b61031684848461072a565b90509392505050565b60006103296105a8565b60020160009054906101000a900460ff16905090565b60006103496105a8565b60000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606061039b6105a8565b60050180546103a990610ecf565b80601f01602080910402602001604051908101604052809291908181526020018280546103d590610ecf565b80156104225780601f106103f757610100808354040283529160200191610422565b820191906000526020600020905b81548152906001019060200180831161040557829003601f168201915b5050505050905090565b600061043933848461072a565b905092915050565b600061044b6105a8565b60010160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000806104dc6105a8565b9050868160040190816104ef91906110ac565b508581600501908161050191906110ac565b50848160020160006101000a81548160ff021916908360ff1602179055508060020160009054906101000a900460ff16600a61053d91906112e0565b84610548919061132b565b816003018190555080600301548160000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600191505095945050505050565b6000807f3d9dd05acf4eeff6ea52c75c57684253f050e85b2811ab1bd50aab995424edbc90508091505090565b60006105e18483610864565b816105ea6105a8565b60010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516106c89190610b7a565b60405180910390a3600190509392505050565b6106e68383836108b1565b610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c906113d1565b60405180910390fd5b505050565b60006107368483610864565b8161073f6105a8565b60000160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461078e91906113f1565b925050819055508161079e6105a8565b60000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107ed9190611425565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516108519190610b7a565b60405180910390a3600190509392505050565b61086e8282610945565b6108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a4906114a5565b60405180910390fd5b5050565b6000816108bc6105a8565b60010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101590509392505050565b6000816109506105a8565b60000160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156109d55780820151818401526020810190506109ba565b60008484015250505050565b6000601f19601f8301169050919050565b60006109fd8261099b565b610a0781856109a6565b9350610a178185602086016109b7565b610a20816109e1565b840191505092915050565b60006020820190508181036000830152610a4581846109f2565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8c82610a61565b9050919050565b610a9c81610a81565b8114610aa757600080fd5b50565b600081359050610ab981610a93565b92915050565b6000819050919050565b610ad281610abf565b8114610add57600080fd5b50565b600081359050610aef81610ac9565b92915050565b60008060408385031215610b0c57610b0b610a57565b5b6000610b1a85828601610aaa565b9250506020610b2b85828601610ae0565b9150509250929050565b60008115159050919050565b610b4a81610b35565b82525050565b6000602082019050610b656000830184610b41565b92915050565b610b7481610abf565b82525050565b6000602082019050610b8f6000830184610b6b565b92915050565b600080600060608486031215610bae57610bad610a57565b5b6000610bbc86828701610aaa565b9350506020610bcd86828701610aaa565b9250506040610bde86828701610ae0565b9150509250925092565b600060ff82169050919050565b610bfe81610be8565b82525050565b6000602082019050610c196000830184610bf5565b92915050565b600060208284031215610c3557610c34610a57565b5b6000610c4384828501610aaa565b91505092915050565b60008060408385031215610c6357610c62610a57565b5b6000610c7185828601610aaa565b9250506020610c8285828601610aaa565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610cce826109e1565b810181811067ffffffffffffffff82111715610ced57610cec610c96565b5b80604052505050565b6000610d00610a4d565b9050610d0c8282610cc5565b919050565b600067ffffffffffffffff821115610d2c57610d2b610c96565b5b610d35826109e1565b9050602081019050919050565b82818337600083830152505050565b6000610d64610d5f84610d11565b610cf6565b905082815260208101848484011115610d8057610d7f610c91565b5b610d8b848285610d42565b509392505050565b600082601f830112610da857610da7610c8c565b5b8135610db8848260208601610d51565b91505092915050565b610dca81610be8565b8114610dd557600080fd5b50565b600081359050610de781610dc1565b92915050565b600080600080600060a08688031215610e0957610e08610a57565b5b600086013567ffffffffffffffff811115610e2757610e26610a5c565b5b610e3388828901610d93565b955050602086013567ffffffffffffffff811115610e5457610e53610a5c565b5b610e6088828901610d93565b9450506040610e7188828901610dd8565b9350506060610e8288828901610ae0565b9250506080610e9388828901610aaa565b9150509295509295909350565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610ee757607f821691505b602082108103610efa57610ef9610ea0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302610f627fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610f25565b610f6c8683610f25565b95508019841693508086168417925050509392505050565b6000819050919050565b6000610fa9610fa4610f9f84610abf565b610f84565b610abf565b9050919050565b6000819050919050565b610fc383610f8e565b610fd7610fcf82610fb0565b848454610f32565b825550505050565b600090565b610fec610fdf565b610ff7818484610fba565b505050565b5b8181101561101b57611010600082610fe4565b600181019050610ffd565b5050565b601f8211156110605761103181610f00565b61103a84610f15565b81016020851015611049578190505b61105d61105585610f15565b830182610ffc565b50505b505050565b600082821c905092915050565b600061108360001984600802611065565b1980831691505092915050565b600061109c8383611072565b9150826002028217905092915050565b6110b58261099b565b67ffffffffffffffff8111156110ce576110cd610c96565b5b6110d88254610ecf565b6110e382828561101f565b600060209050601f8311600181146111165760008415611104578287015190505b61110e8582611090565b865550611176565b601f19841661112486610f00565b60005b8281101561114c57848901518255600182019150602085019450602081019050611127565b868310156111695784890151611165601f891682611072565b8355505b6001600288020188555050505b505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b6001851115611204578086048111156111e0576111df61117e565b5b60018516156111ef5780820291505b80810290506111fd856111ad565b94506111c4565b94509492505050565b60008261121d57600190506112d9565b8161122b57600090506112d9565b8160018114611241576002811461124b5761127a565b60019150506112d9565b60ff84111561125d5761125c61117e565b5b8360020a9150848211156112745761127361117e565b5b506112d9565b5060208310610133831016604e8410600b84101617156112af5782820a9050838111156112aa576112a961117e565b5b6112d9565b6112bc84848460016111ba565b925090508184048111156112d3576112d261117e565b5b81810290505b9392505050565b60006112eb82610abf565b91506112f683610be8565b92506113237fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461120d565b905092915050565b600061133682610abf565b915061134183610abf565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561137a5761137961117e565b5b828202905092915050565b7f45524332303a20496e73756666696369656e7420416c6c6f77616e6365000000600082015250565b60006113bb601d836109a6565b91506113c682611385565b602082019050919050565b600060208201905081810360008301526113ea816113ae565b9050919050565b60006113fc82610abf565b915061140783610abf565b925082820390508181111561141f5761141e61117e565b5b92915050565b600061143082610abf565b915061143b83610abf565b92508282019050808211156114535761145261117e565b5b92915050565b7f45524332303a20496e73756666696369656e742046756e647300000000000000600082015250565b600061148f6019836109a6565b915061149a82611459565b602082019050919050565b600060208201905081810360008301526114be81611482565b905091905056fea2646970667358221220f20165cd3c0744f511297dfe4a4f66ad0114e7ec1bf809a2c241cc68c60f17af64736f6c63430008100033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(overrides || {}) as Promise<ERC20>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
