/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ERC721, ERC721Interface } from "../../facets/ERC721";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenID_",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account_",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "string",
        name: "ipfsHash_",
        type: "string",
      },
    ],
    name: "construct",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID_",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenID_",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenID_",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator_",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved_",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID_",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from_",
        type: "address",
      },
      {
        internalType: "address",
        name: "to_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenID_",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506121d9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806395d89b411161008c578063b88d4fde11610066578063b88d4fde1461025b578063c87b56dd14610277578063e0447b59146102a7578063e985e9c5146102d7576100ea565b806395d89b41146101f1578063a22cb4651461020f578063a9059cbb1461022b576100ea565b806323b872dd116100c857806323b872dd1461015957806342842e0e146101755780636352211e1461019157806370a08231146101c1576100ea565b806306fdde03146100ef578063081812fc1461010d578063095ea7b31461013d575b600080fd5b6100f7610307565b604051610104919061132f565b60405180910390f35b6101276004803603810190610122919061139b565b6103a2565b6040516101349190611409565b60405180910390f35b61015760048036038101906101529190611450565b6103e8565b005b610173600480360381019061016e9190611490565b6103f8565b005b61018f600480360381019061018a9190611490565b610413565b005b6101ab60048036038101906101a6919061139b565b610433565b6040516101b89190611409565b60405180910390f35b6101db60048036038101906101d691906114e3565b61044e565b6040516101e8919061151f565b60405180910390f35b6101f96104a0565b604051610206919061132f565b60405180910390f35b61022960048036038101906102249190611572565b61053b565b005b61024560048036038101906102409190611450565b61054a565b60405161025291906115c1565b60405180910390f35b61027560048036038101906102709190611711565b61055f565b005b610291600480360381019061028c919061139b565b61057b565b60405161029e919061132f565b60405180910390f35b6102c160048036038101906102bc9190611835565b61069d565b6040516102ce91906115c1565b60405180910390f35b6102f160048036038101906102ec91906118dc565b6106e6565b6040516102fe91906115c1565b60405180910390f35b6060610311610783565b600001805461031f9061194b565b80601f016020809104026020016040519081016040528092919081815260200182805461034b9061194b565b80156103985780601f1061036d57610100808354040283529160200191610398565b820191906000526020600020905b81548152906001019060200180831161037b57829003601f168201915b5050505050905090565b60006103ac610783565b600601600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6103f33383836107b0565b505050565b61040283826108fb565b61040d838383610948565b50505050565b61042e8383836040518060200160405280600081525061055f565b505050565b600061043e82610b7c565b61044782610bc7565b9050919050565b6000610458610783565b60050160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606104aa610783565b60010180546104b89061194b565b80601f01602080910402602001604051908101604052809291908181526020018280546104e49061194b565b80156105315780601f1061050657610100808354040283529160200191610531565b820191906000526020600020905b81548152906001019060200180831161051457829003601f168201915b5050505050905090565b610546338383610c0d565b5050565b6000610557338484610948565b905092915050565b61056933836108fb565b61057584848484610d82565b50505050565b606061058682610b7c565b6000610590610783565b600301600084815260200190815260200160002080546105af9061194b565b80601f01602080910402602001604051908101604052809291908181526020018280546105db9061194b565b80156106285780601f106105fd57610100808354040283529160200191610628565b820191906000526020600020905b81548152906001019060200180831161060b57829003601f168201915b505050505090506000610639610da0565b9050600081510361064e578192505050610698565b60008251111561068357808260405160200161066b9291906119b8565b60405160208183030381529060405292505050610698565b60405180602001604052806000815250925050505b919050565b6000836106a8610783565b60000190816106b79190611b88565b50826106c1610783565b60010190816106d09190611b88565b506106db3383610ddd565b600190509392505050565b60006106f0610783565b60070160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000807ffdb40b4513e87ba68a2d4d41e9a4d87473a89a3b7478f67b978cfb9cecddba6c90508091505090565b60008273ffffffffffffffffffffffffffffffffffffffff166107d283610433565b73ffffffffffffffffffffffffffffffffffffffff1603610828576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161081f90611ccc565b60405180910390fd5b61083284836108fb565b8261083b610783565b600601600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff166108ae84610433565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4600190509392505050565b6109058282610faf565b610944576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093b90611d5e565b60405180910390fd5b5050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109af90611df0565b60405180910390fd5b6109c182610b7c565b6109cb8483611006565b60006109d5610783565b905080600601600084815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690558381600401600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ab59190611e3f565b9250508190555060018160050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610b0e9190611e73565b92505081905550828473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a460019150509392505050565b610b8581611080565b610bc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbb90611ef3565b60405180910390fd5b50565b6000610bd1610783565b600401600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7290611f5f565b60405180910390fd5b80610c84610783565b60070160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610d7591906115c1565b60405180910390a3505050565b610d8d848484610948565b50610d9a848484846110c1565b50505050565b60606040518060400160405280601581526020017f68747470733a2f2f697066732e696f2f697066732f0000000000000000000000815250905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4390611df0565b60405180910390fd5b6000610e56610783565b90506001816002016000828254610e6d9190611e73565b9250508190555060008160020154905060018260050160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ecf9190611e73565b925050819055508382600401600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828260030160008381526020019081526020016000209081610f4c9190611b88565b50808473ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b600080610fbb83610bc7565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610ffd5750610ffc81856106e6565b5b91505092915050565b8173ffffffffffffffffffffffffffffffffffffffff1661102682610bc7565b73ffffffffffffffffffffffffffffffffffffffff161461107c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107390611fcb565b60405180910390fd5b5050565b60008073ffffffffffffffffffffffffffffffffffffffff166110a283610bc7565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b6110cd84848484611112565b61110c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111039061205d565b60405180910390fd5b50505050565b600061111d8461127c565b1561126f578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02338786866040518563ffffffff1660e01b815260040161116194939291906120d2565b6020604051808303816000875af192505050801561119d57506040513d601f19601f8201168201806040525081019061119a9190612176565b60015b61121f573d80600081146111cd576040519150601f19603f3d011682016040523d82523d6000602084013e6111d2565b606091505b506000815103611217576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161120e9061205d565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611274565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112d95780820151818401526020810190506112be565b60008484015250505050565b6000601f19601f8301169050919050565b60006113018261129f565b61130b81856112aa565b935061131b8185602086016112bb565b611324816112e5565b840191505092915050565b6000602082019050818103600083015261134981846112f6565b905092915050565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b61137881611365565b811461138357600080fd5b50565b6000813590506113958161136f565b92915050565b6000602082840312156113b1576113b061135b565b5b60006113bf84828501611386565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006113f3826113c8565b9050919050565b611403816113e8565b82525050565b600060208201905061141e60008301846113fa565b92915050565b61142d816113e8565b811461143857600080fd5b50565b60008135905061144a81611424565b92915050565b600080604083850312156114675761146661135b565b5b60006114758582860161143b565b925050602061148685828601611386565b9150509250929050565b6000806000606084860312156114a9576114a861135b565b5b60006114b78682870161143b565b93505060206114c88682870161143b565b92505060406114d986828701611386565b9150509250925092565b6000602082840312156114f9576114f861135b565b5b60006115078482850161143b565b91505092915050565b61151981611365565b82525050565b60006020820190506115346000830184611510565b92915050565b60008115159050919050565b61154f8161153a565b811461155a57600080fd5b50565b60008135905061156c81611546565b92915050565b600080604083850312156115895761158861135b565b5b60006115978582860161143b565b92505060206115a88582860161155d565b9150509250929050565b6115bb8161153a565b82525050565b60006020820190506115d660008301846115b2565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61161e826112e5565b810181811067ffffffffffffffff8211171561163d5761163c6115e6565b5b80604052505050565b6000611650611351565b905061165c8282611615565b919050565b600067ffffffffffffffff82111561167c5761167b6115e6565b5b611685826112e5565b9050602081019050919050565b82818337600083830152505050565b60006116b46116af84611661565b611646565b9050828152602081018484840111156116d0576116cf6115e1565b5b6116db848285611692565b509392505050565b600082601f8301126116f8576116f76115dc565b5b81356117088482602086016116a1565b91505092915050565b6000806000806080858703121561172b5761172a61135b565b5b60006117398782880161143b565b945050602061174a8782880161143b565b935050604061175b87828801611386565b925050606085013567ffffffffffffffff81111561177c5761177b611360565b5b611788878288016116e3565b91505092959194509250565b600067ffffffffffffffff8211156117af576117ae6115e6565b5b6117b8826112e5565b9050602081019050919050565b60006117d86117d384611794565b611646565b9050828152602081018484840111156117f4576117f36115e1565b5b6117ff848285611692565b509392505050565b600082601f83011261181c5761181b6115dc565b5b813561182c8482602086016117c5565b91505092915050565b60008060006060848603121561184e5761184d61135b565b5b600084013567ffffffffffffffff81111561186c5761186b611360565b5b61187886828701611807565b935050602084013567ffffffffffffffff81111561189957611898611360565b5b6118a586828701611807565b925050604084013567ffffffffffffffff8111156118c6576118c5611360565b5b6118d286828701611807565b9150509250925092565b600080604083850312156118f3576118f261135b565b5b60006119018582860161143b565b92505060206119128582860161143b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061196357607f821691505b6020821081036119765761197561191c565b5b50919050565b600081905092915050565b60006119928261129f565b61199c818561197c565b93506119ac8185602086016112bb565b80840191505092915050565b60006119c48285611987565b91506119d08284611987565b91508190509392505050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611a3e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611a01565b611a488683611a01565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611a85611a80611a7b84611365565b611a60565b611365565b9050919050565b6000819050919050565b611a9f83611a6a565b611ab3611aab82611a8c565b848454611a0e565b825550505050565b600090565b611ac8611abb565b611ad3818484611a96565b505050565b5b81811015611af757611aec600082611ac0565b600181019050611ad9565b5050565b601f821115611b3c57611b0d816119dc565b611b16846119f1565b81016020851015611b25578190505b611b39611b31856119f1565b830182611ad8565b50505b505050565b600082821c905092915050565b6000611b5f60001984600802611b41565b1980831691505092915050565b6000611b788383611b4e565b9150826002028217905092915050565b611b918261129f565b67ffffffffffffffff811115611baa57611ba96115e6565b5b611bb4825461194b565b611bbf828285611afb565b600060209050601f831160018114611bf25760008415611be0578287015190505b611bea8582611b6c565b865550611c52565b601f198416611c00866119dc565b60005b82811015611c2857848901518255600182019150602085019450602081019050611c03565b86831015611c455784890151611c41601f891682611b4e565b8355505b6001600288020188555050505b505050505050565b7f4552433732313a20417070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611cb66021836112aa565b9150611cc182611c5a565b604082019050919050565b60006020820190508181036000830152611ce581611ca9565b9050919050565b7f4552433732313a204e6f7420746f6b656e206f776e6572206f7220617070726f60008201527f7665640000000000000000000000000000000000000000000000000000000000602082015250565b6000611d486023836112aa565b9150611d5382611cec565b604082019050919050565b60006020820190508181036000830152611d7781611d3b565b9050919050565b7f4552433732313a2043616e6e6f74207472616e7366657220746f20302061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611dda6024836112aa565b9150611de582611d7e565b604082019050919050565b60006020820190508181036000830152611e0981611dcd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e4a82611365565b9150611e5583611365565b9250828203905081811115611e6d57611e6c611e10565b5b92915050565b6000611e7e82611365565b9150611e8983611365565b9250828201905080821115611ea157611ea0611e10565b5b92915050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611edd6018836112aa565b9150611ee882611ea7565b602082019050919050565b60006020820190508181036000830152611f0c81611ed0565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f496019836112aa565b9150611f5482611f13565b602082019050919050565b60006020820190508181036000830152611f7881611f3c565b9050919050565b7f4552433732313a204e6f7420746f6b656e206f776e6572000000000000000000600082015250565b6000611fb56017836112aa565b9150611fc082611f7f565b602082019050919050565b60006020820190508181036000830152611fe481611fa8565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b60006120476032836112aa565b915061205282611feb565b604082019050919050565b600060208201905081810360008301526120768161203a565b9050919050565b600081519050919050565b600082825260208201905092915050565b60006120a48261207d565b6120ae8185612088565b93506120be8185602086016112bb565b6120c7816112e5565b840191505092915050565b60006080820190506120e760008301876113fa565b6120f460208301866113fa565b6121016040830185611510565b81810360608301526121138184612099565b905095945050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6121538161211e565b811461215e57600080fd5b50565b6000815190506121708161214a565b92915050565b60006020828403121561218c5761218b61135b565b5b600061219a84828501612161565b9150509291505056fea2646970667358221220cb78010c48db7ea6e707807ef430d5b8e272c3b5ed2e137872800a3494c74f8f64736f6c63430008100033";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721> {
    return super.deploy(overrides || {}) as Promise<ERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  override connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
